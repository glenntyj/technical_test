{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\glenn\\\\Desktop\\\\Technical_Test\\\\client\\\\src\\\\components\\\\DataList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataList = ({\n  data\n}) => {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 10;\n  const paginatedData = data.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\n  const totalPages = Math.ceil(data.length / itemsPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: paginatedData.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: JSON.stringify(item)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(page => Math.max(page - 1, 1)),\n        disabled: currentPage === 1,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", currentPage, \" of \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(page => Math.min(page + 1, totalPages)),\n        disabled: currentPage === totalPages,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(DataList, \"6xAUoJ2motYJ38x4zeUWisA+X/4=\");\n_c = DataList;\nexport default DataList;\nvar _c;\n$RefreshReg$(_c, \"DataList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DataList","data","_s","currentPage","setCurrentPage","itemsPerPage","paginatedData","slice","totalPages","Math","ceil","length","children","map","item","index","JSON","stringify","fileName","_jsxFileName","lineNumber","columnNumber","onClick","page","max","disabled","min","_c","$RefreshReg$"],"sources":["C:/Users/glenn/Desktop/Technical_Test/client/src/components/DataList.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst DataList = ({ data }) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 10;\r\n\r\n  const paginatedData = data.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\r\n  const totalPages = Math.ceil(data.length / itemsPerPage);\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {paginatedData.map((item, index) => (\r\n          <li key={index}>{JSON.stringify(item)}</li>\r\n        ))}\r\n      </ul>\r\n      <div>\r\n        <button onClick={() => setCurrentPage((page) => Math.max(page - 1, 1))} disabled={currentPage === 1}>\r\n          Previous\r\n        </button>\r\n        <span>\r\n          Page {currentPage} of {totalPages}\r\n        </span>\r\n        <button onClick={() => setCurrentPage((page) => Math.min(page + 1, totalPages))} disabled={currentPage === totalPages}>\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMQ,YAAY,GAAG,EAAE;EAEvB,MAAMC,aAAa,GAAGL,IAAI,CAACM,KAAK,CAAC,CAACJ,WAAW,GAAG,CAAC,IAAIE,YAAY,EAAEF,WAAW,GAAGE,YAAY,CAAC;EAC9F,MAAMG,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACT,IAAI,CAACU,MAAM,GAAGN,YAAY,CAAC;EAExD,oBACEN,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EACGN,aAAa,CAACO,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC7BhB,OAAA;QAAAa,QAAA,EAAiBI,IAAI,CAACC,SAAS,CAACH,IAAI;MAAC,GAA5BC,KAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA4B,CAC3C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLtB,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAQuB,OAAO,EAAEA,CAAA,KAAMlB,cAAc,CAAEmB,IAAI,IAAKd,IAAI,CAACe,GAAG,CAACD,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,CAAE;QAACE,QAAQ,EAAEtB,WAAW,KAAK,CAAE;QAAAS,QAAA,EAAC;MAErG;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTtB,OAAA;QAAAa,QAAA,GAAM,OACC,EAACT,WAAW,EAAC,MAAI,EAACK,UAAU;MAAA;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACPtB,OAAA;QAAQuB,OAAO,EAAEA,CAAA,KAAMlB,cAAc,CAAEmB,IAAI,IAAKd,IAAI,CAACiB,GAAG,CAACH,IAAI,GAAG,CAAC,EAAEf,UAAU,CAAC,CAAE;QAACiB,QAAQ,EAAEtB,WAAW,KAAKK,UAAW;QAAAI,QAAA,EAAC;MAEvH;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnB,EAAA,CA3BIF,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AA6Bd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}